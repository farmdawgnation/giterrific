swagger: '2.0'
info:
  title: Giterrific REST API v1
  description: |
    **Giterrific** is a  lightweight JSON API for private Git servers. It
    exposes simple and straightforward actions for obtaining information about
    git repositories. Unlike GitLab or GitHub Enterprise, its goal isn't to
    profile full fledged collaboration and editing tools for git repositories.
    Instead, the objective is to better enable applications to be built _on top_
    of git repositories by surfacing information about them in a structured
    JSON API.
  version: "0.2.0"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
  - text/plain
host: "localhost:8080"

parameters:
  repo:
    name: repo
    in: path
    description: |
      The path to the git repository relative to the configured root fo the
      Giterrific server. Must end in ".git"
    required: true
    type: string
  ref:
    name: ref
    in: path
    description: |
      A ref indicating the HEAD at which to start traversing commits. This could
      be a branch name or a commit SHA.
    required: true
    type: string
  filepathForDirectory:
    name: filepath
    in: path
    description: The directory whose files you wish to list.
    required: true
    type: string
  filepathForFile:
    name: filepath
    in: path
    description: The file whose contents you wish to retrieve.
    required: true
    type: string

paths:
  /repos/{repo}/commits/{ref}:
    get:
      operationId: "getCommits"
      summary: |
        List the commits on a particular ref, which could be a branch or a sha
        hash of some sort.
      tags:
        - commits
      parameters:
        - $ref: '#/parameters/repo'
        - $ref: '#/parameters/ref'
        - name: maxCount
          in: query
          description: The maximum number of commits to return for this query.
          type: number
        - name: skip
          in: query
          type: number
          description: |
            The number of commits to skip before returning commits for this request.
      responses:
        200:
          description: The result of a successful execution of the request.
          schema:
            $ref: '#/definitions/RepositoryCommitSummaryPage'
        404:
          description: Used if the repo or the ref could not be found.
          schema:
            type: string
        default:
          description: An unexpected error

  /repos/{repo}/commits/{ref}/tree:
    get:
      summary: Retreive the file contents of the root of the repository.
      tags:
        - tree
      parameters:
        - $ref: '#/parameters/repo'
        - $ref: '#/parameters/ref'
      responses:
        200:
          description: An array of file summaries.
          schema:
            type: array
            items:
              $ref: '#/definitions/RepositoryFileSummary'
        404:
          description: Used if the repo or the ref could not be found.
          schema:
            type: string
        default:
          description: An unexpected error

  /repos/{repo}/commits/{ref}/tree/{filepath}:
    get:
      summary: Retreive the contents of a subpath in the repository.
      tags:
        - tree
      parameters:
        - $ref: '#/parameters/repo'
        - $ref: '#/parameters/ref'
        - $ref: '#/parameters/filepathForDirectory'
      responses:
        200:
          description: An array of commit summaries.
          schema:
            type: array
            items:
              $ref: '#/definitions/RepositoryFileSummary'
        404:
          description: Used if the repo, ref, or file path could not be found.
          schema:
            type: string
        default:
          description: An unexpected error

  /repos/{repo}/commits/{ref}/contents/{filepath}:
    get:
      summary: Retreive the contents of a file.
      tags:
        - contents
      parameters:
        - $ref: '#/parameters/repo'
        - $ref: '#/parameters/ref'
        - $ref: '#/parameters/filepathForFile'
      responses:
        200:
          description: A file contents object.
          schema:
            $ref: '#/definitions/RepositoryFileContent'
        404:
          description: Used if the repo, ref, or file path could not be found.
          schema:
            type: string
        400:
          description: Used if the file requested is too large to be serialized as JSON.
          schema:
            type: string
        default:
          description: An unexpected error

  /repos/{repo}/commits/{ref}/raw/{filepath}:
    get:
      summary: Retreive the raw stream of a file.
      produces:
        - application/json
        - application/octet-stream
      tags:
        - contents
      parameters:
        - $ref: '#/parameters/repo'
        - $ref: '#/parameters/ref'
        - $ref: '#/parameters/filepathForFile'
      responses:
        200:
          description: The file contents.
          schema:
            type: file
        404:
          description: Used if the repo, ref, or file path could not be found.
          schema:
            type: string
        default:
          description: An unexpected error

definitions:
  RepositoryCommitIdentity:
    type: object
    properties:
      date:
        type: string
        format: date
        description: "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date representation of when the person touched the commit."
      name:
        type: string
        description: The name of the person identified by this identity object.
      email:
        type: string
        description: The description of the person identified by this identity object.

  RepositoryCommitSummary:
    type: object
    properties:
      sha:
        type: string
        description: The sha identifier of the commit.
      author:
        $ref: '#/definitions/RepositoryCommitIdentity'
      committer:
        $ref: '#/definitions/RepositoryCommitIdentity'
      message:
        type: string
        description: The message associated with the commit.

  RepositoryCommitSummaryPage:
    type: object
    properties:
      ref:
        type: string
        description: The ref that this commit summary page is browsing.
      totalCommitCount:
        type: number
        description: The total number of commits on this ref.
      skip:
        type: number
        description: The number of commits skipped before the start of this page.
      maxCount:
        type: number
        description: The maximum count requested per page.
      commits:
        type: array
        items:
          $ref: '#/definitions/RepositoryCommitSummary'

  RepositoryFileSummary:
    type: object
    properties:
      name:
        type: string
        description: The name of the file this summary references.
      path:
        type: string
        description: The full path to the file this summary references.
      mode:
        type: string
        description: The permissions assigned to the file when it's in a working folder.
      isDirectory:
        type: boolean
        description: Whether or not this entry is a directory.
      size:
        type: integer
        description: The size of the file entry.
        minimum: 0

  RepositoryFileContent:
    type: object
    properties:
      name:
        type: string
        description: The name of the file that this content represents.
      content:
        type: string
        description: |
          The content of the file, encoded according to the specified encoding.
      encoding:
        type: string
        description: The encoding of the file's contents.
        enum:
          - 'utf8'
          - 'base64'
      size:
        type: integer
        description: The size of the file in bytes.
        minimum: 0
